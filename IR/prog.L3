define :main (  ) {
	:entry
	p0D_16807 <- 7 >> 1
	p1D_16807 <- 7 >> 1
	p2D_16807 <- 7 >> 1
	v0_16807 <- p0D_16807
	v0_16807 <- v0_16807 * p1D_16807
	v0_16807 <- v0_16807 * p2D_16807
	v0_16807 <- v0_16807 << 1
	v0_16807 <- v0_16807 + 9
	a <- call allocate(v0_16807, 1)
	v1_16807 <- a + 8
	store v1_16807 <- 7
	v2_16807 <- a + 16
	store v2_16807 <- 7
	v3_16807 <- a + 24
	store v3_16807 <- 7
	v4_16807 <- a + 32
	store v4_16807 <- 7

	call :storeV(a, 1, 2, 3)
	return
}
define :storeV ( A, k, i, j ) {
	:entry
	ADDR_D1_282475249 <- A + 24
	D1_282475249_ <- load ADDR_D1_282475249
	D1_282475249 <- D1_282475249_ >> 1
	ADDR_D2_282475249 <- A + 32
	D2_282475249_ <- load ADDR_D2_282475249
	D2_282475249 <- D2_282475249_ >> 1
	offset_282475249 <- j + 5
	mult_282475249 <- j
	inc_282475249 <- mult_282475249 * i
	offset_282475249 <- offset_282475249 + inc_282475249
	mult_282475249 <- mult_282475249 * D1_282475249
	inc_282475249 <- mult_282475249 * k
	offset_282475249 <- offset_282475249 + inc_282475249
	offset_282475249 <- offset_282475249 * 8
	addr_282475249 <- A + offset_282475249
	store addr_282475249 <- 5

	return
}
